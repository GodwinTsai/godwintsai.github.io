{"name":"C#","slug":"C","count":4,"postlist":[{"title":"C#复制文件","uid":"753f4a58196ae7671f17e65f13baa6b7","slug":"CSharp复制文件","date":"2018-01-09T09:22:12.000Z","updated":"2022-07-16T11:30:57.115Z","comments":true,"path":"api/articles/CSharp复制文件.json","keywords":null,"cover":null,"text":" 尊重原创，转载请在文首注明出处：http://blog.csdn.net/cai612781/article/details/79015286 开发Unity编辑器工具中经常遇到需要把文件复制到工程中，例如数据、图片等。 using System.Collections.Gen...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"C#","slug":"C","count":4,"path":"api/categories/C.json"}],"tags":[{"name":"C#复制文件 删除只读文件异常","slug":"C-复制文件-删除只读文件异常","count":1,"path":"api/tags/C-复制文件-删除只读文件异常.json"}],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"C#调用可执行文件","uid":"352e398b9e08d481e8318632bbc69c42","slug":"CSharp调用可执行文件","date":"2018-01-11T01:50:59.000Z","updated":"2022-07-16T11:30:57.116Z","comments":true,"path":"api/articles/CSharp调用可执行文件.json","keywords":null,"cover":null,"text":" 尊重原创，转载请在文首注明出处：http://blog.csdn.net/cai612781/article/details/79030654 一，语法 C#提供Process类来对本地或远程进程进行访问，以及启动或停止本地进程。 更多语法信息：https://msdn.mic...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"C#","slug":"C","count":4,"path":"api/categories/C.json"}],"tags":[{"name":"C#启动进程 C#调用可执行文件","slug":"C-启动进程-C-调用可执行文件","count":1,"path":"api/tags/C-启动进程-C-调用可执行文件.json"}],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"C#调用SVN","uid":"46fb15b5cb654d863634ab785c7560a1","slug":"CSharp调用SVN","date":"2018-01-09T09:10:37.000Z","updated":"2022-07-16T14:45:06.484Z","comments":true,"path":"api/articles/CSharp调用SVN.json","keywords":null,"cover":null,"text":" 尊重原创，转载请在文首注明出处：http://blog.csdn.net/cai612781/article/details/79015085 一，语法 项目开发中通常都会使用Subversion(SVN)作为版本控制系统，同时会使用SVN的客户端软件TortoiseSVN。 ...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"C#","slug":"C","count":4,"path":"api/categories/C.json"}],"tags":[{"name":"C#调用SVN","slug":"C-调用SVN","count":1,"path":"api/tags/C-调用SVN.json"}],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Skill&Buff Editor","uid":"9445c1590d18cd4588eaa614d62d2feb","slug":"Skill&Buff Editor","date":"2020-04-02T02:57:25.000Z","updated":"2022-07-16T11:30:57.117Z","comments":true,"path":"api/articles/Skill&Buff Editor.json","keywords":null,"cover":[],"text":" 之前项目做的一个moba的skill&amp;buff编辑器，采用winform实现，独立于Unity。 主编辑窗口（图中左上角），通过c# Attribute，反射技能逻辑的字段，采用节点和连线编辑，独立于具体的技能逻辑。 节点的属性编辑（图中右上角）通过扩展winform的...","link":"","photos":[],"count_time":{"symbolsCount":304,"symbolsTime":"1 mins."},"categories":[{"name":"C#","slug":"C","count":4,"path":"api/categories/C.json"}],"tags":[{"name":"Unity","slug":"Unity","count":1,"path":"api/tags/Unity.json"}],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}]}