{"title":"bilibili发送弹幕","uid":"d0e1bfe93c0db1f072a3c290822ee8c7","slug":"bilibili发送弹幕","date":"2020-02-23T17:51:40.000Z","updated":"2022-07-16T11:30:57.119Z","comments":true,"path":"api/articles/bilibili发送弹幕.json","keywords":null,"cover":[],"content":"<span id=\"more\"></span>\n\n<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>媳妇儿玩起了bilibili直播，我就顺便研究下利用python发送弹幕，以表支持～，主要思路通过发送http请求。</p>\n<h3 id=\"发送弹幕\"><a href=\"#发送弹幕\" class=\"headerlink\" title=\"发送弹幕\"></a>发送弹幕</h3><h4 id=\"1-查询http请求\"><a href=\"#1-查询http请求\" class=\"headerlink\" title=\"1. 查询http请求\"></a>1. 查询http请求</h4><p>首先登录b站，进入直播间，打开开发者工具，先在直播间发送一条弹幕。</p>\n<p>可以看到请求的url地址，请求方式是post，以及请求的表单数据：<br><img src=\"https://img-blog.csdnimg.cn/20200224013846240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NhaTYxMjc4MQ==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"2-查询自己账号cookie和user-agent信息\"><a href=\"#2-查询自己账号cookie和user-agent信息\" class=\"headerlink\" title=\"2. 查询自己账号cookie和user-agent信息\"></a>2. 查询自己账号cookie和user-agent信息</h4><p>打开开发者工具，进入个人中心&#x2F;首页：<br><img src=\"https://img-blog.csdnimg.cn/20200224013940614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NhaTYxMjc4MQ==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"3-代码\"><a href=\"#3-代码\" class=\"headerlink\" title=\"3. 代码\"></a>3. 代码</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">\nimport requests\nimport time\n\nclass bullet_screen():\n    def __init__(self, room_id):\n        self.room_id &#x3D; room_id\n        self.send_url &#x3D; &quot;https:&#x2F;&#x2F;api.live.bilibili.com&#x2F;msg&#x2F;send&quot;\n        self.cookie &#x3D; &#123;&#39;Cookie&#39; : &#39;填入上图查询到的cookie&#39;&#125;\n        self.header &#x3D; &#123;&#39;User-Agent&#39; : &#39;填入上图查询到的userAgent&#39;&#125;\n\n        self.send_data &#x3D; &#123;\n            &#39;color&#39;: 16777215,\n            &#39;fontsize&#39;: 25,\n            &#39;mode&#39;: 1,\n            &#39;msg&#39;: &#39;123&#39;,\n            &#39;rnd&#39;: 1582471255,\n            &#39;roomid&#39;: room_id,\n            &#39;bubble&#39;: 0,\n            &#39;csrf_token&#39;: &#39;44d0e7f3eaea7ff05774822e8eaf49b2&#39;,\n            &#39;csrf&#39;: &#39;44d0e7f3eaea7ff05774822e8eaf49b2&#39;\n        &#125;\n\n    def send(self, msg):\n        self.send_data[&#39;rnd&#39;] &#x3D; time.time() #获得当前的时间戳\n        self.send_data[&#39;msg&#39;] &#x3D; msg\n        reponse &#x3D; requests.post(self.send_url, data&#x3D;self.send_data,cookies&#x3D;self.cookie,headers&#x3D;self.header)\n        return reponse\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    bullet_screen &#x3D; bullet_screen(21912783)\n    response &#x3D; bullet_screen.send(&#39;棒棒哒&#39;)\n    print(response)</code></pre>\n\n<h3 id=\"查询弹幕\"><a href=\"#查询弹幕\" class=\"headerlink\" title=\"查询弹幕\"></a>查询弹幕</h3><h4 id=\"1-查询http请求-1\"><a href=\"#1-查询http请求-1\" class=\"headerlink\" title=\"1. 查询http请求\"></a>1. 查询http请求</h4><p>打开开发者工具，刷新下页面，找到一个msg信息，可以得到路径和表单信息：<br><img src=\"https://img-blog.csdnimg.cn/20200224014122429.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NhaTYxMjc4MQ==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"2-查询返回信息结构\"><a href=\"#2-查询返回信息结构\" class=\"headerlink\" title=\"2. 查询返回信息结构\"></a>2. 查询返回信息结构</h4><p>在Preview 标签中可以看到返回了最后10条弹幕：<br><img src=\"https://img-blog.csdnimg.cn/20200224014214328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NhaTYxMjc4MQ==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"3-代码-1\"><a href=\"#3-代码-1\" class=\"headerlink\" title=\"3. 代码\"></a>3. 代码</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">\nimport requests\nimport json\n\nclass bullet_screen():\n    def __init__(self, room_id):\n        self.room_id &#x3D; room_id\n        self.query_url &#x3D; &#39;https:&#x2F;&#x2F;api.live.bilibili.com&#x2F;ajax&#x2F;msg&#39;\n        self.cookie &#x3D; &#123;&#39;Cookie&#39; : &#39;填入上图查询到的cookie&#39;&#125;\n        self.header &#x3D; &#123;&#39;User-Agent&#39; : &#39;填入上图查询到的userAgent&#39;&#125;\n\n        self.query_data &#x3D; &#123;\n            &#39;roomid&#39;: room_id,\n            &#39;csrf_token&#39;: &#39;44d0e7f3eaea7ff05774822e8eaf49b2&#39;,\n        &#125;\n\n    def query(self):\n        response &#x3D; requests.post(self.query_url, data &#x3D; self.query_data)\n        rooms &#x3D; response.json()[&#39;data&#39;][&#39;room&#39;]\n        count &#x3D; len(rooms)\n        if count &gt; 0:\n            return rooms[count - 1][&#39;text&#39;]\n        return None\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    bullet_screen &#x3D; bullet_screen(21912783)\n    response &#x3D; bullet_screen.query()\n    # bullet_screen.send(response)\n    print(response)</code></pre>\n\n<p>获得最近一条弹幕，这样就可以跟着发送相同弹幕了</p>\n<h3 id=\"自动聊天弹幕\"><a href=\"#自动聊天弹幕\" class=\"headerlink\" title=\"自动聊天弹幕\"></a>自动聊天弹幕</h3><p>网上有个图灵机器人，可以实现人机对话，挺有趣，利用它来发送弹幕内容。</p>\n<h4 id=\"1-注册\"><a href=\"#1-注册\" class=\"headerlink\" title=\"1. 注册\"></a>1. 注册</h4><p>首先到<a href=\"http://www.tuling123.com/\">图灵机器人</a>注册，创建机器人，得到一个32位的key。</p>\n<h4 id=\"2，http请求\"><a href=\"#2，http请求\" class=\"headerlink\" title=\"2，http请求\"></a>2，http请求</h4><p>请求接口为<a href=\"http://openapi.tuling123.com/openapi/api/v2%EF%BC%8C%E6%96%B9%E5%BC%8F%E4%B8%BApost%EF%BC%8C%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0%E4%B8%BA%E5%A6%82%E4%B8%8Bjson%E6%A0%BC%E5%BC%8F%EF%BC%9A\">http://openapi.tuling123.com/openapi/api/v2，方式为post，请求参数为如下json格式：</a></p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">\n&#123;\n    &quot;reqType&quot;:0,\n    &quot;perception&quot;: &#123;\n        &quot;inputText&quot;: &#123;\n            &quot;text&quot;: &quot;附近的酒店&quot;\n        &#125;,\n        &quot;inputImage&quot;: &#123;\n            &quot;url&quot;: &quot;imageUrl&quot;\n        &#125;,\n        &quot;selfInfo&quot;: &#123;\n            &quot;location&quot;: &#123;\n                &quot;city&quot;: &quot;北京&quot;,\n                &quot;province&quot;: &quot;北京&quot;,\n                &quot;street&quot;: &quot;信息路&quot;\n            &#125;\n        &#125;\n    &#125;,\n    &quot;userInfo&quot;: &#123;\n        &quot;apiKey&quot;: &quot;&quot;,\n        &quot;userId&quot;: &quot;&quot;\n    &#125;\n&#125;\n</code></pre>\n\n<h4 id=\"3-返回格式\"><a href=\"#3-返回格式\" class=\"headerlink\" title=\"3. 返回格式\"></a>3. 返回格式</h4><pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;intent&quot;: &#123;\n        &quot;code&quot;: 10005,\n        &quot;intentName&quot;: &quot;&quot;,\n        &quot;actionName&quot;: &quot;&quot;,\n        &quot;parameters&quot;: &#123;\n            &quot;nearby_place&quot;: &quot;酒店&quot;\n        &#125;\n    &#125;,\n    &quot;results&quot;: [\n        &#123;\n         \t&quot;groupType&quot;: 1,\n            &quot;resultType&quot;: &quot;url&quot;,\n            &quot;values&quot;: &#123;\n                &quot;url&quot;: &quot;http:&#x2F;&#x2F;m.elong.com&#x2F;hotel&#x2F;0101&#x2F;nlist&#x2F;#indate&#x3D;2016-12-10&amp;outdate&#x3D;2016-12-11&amp;keywords&#x3D;%E4%BF%A1%E6%81%AF%E8%B7%AF&quot;\n            &#125;\n        &#125;,\n        &#123;\n         \t&quot;groupType&quot;: 1,\n            &quot;resultType&quot;: &quot;text&quot;,\n            &quot;values&quot;: &#123;\n                &quot;text&quot;: &quot;亲，已帮你找到相关酒店信息&quot;\n            &#125;\n        &#125;\n    ]\n&#125;</code></pre>\n\n<h4 id=\"4-代码\"><a href=\"#4-代码\" class=\"headerlink\" title=\"4. 代码\"></a>4. 代码</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">\nimport requests\nimport json\n\nclass bullet_screen():\n    def __init__(self, room_id):\n        self.room_id &#x3D; room_id\n        self.api_key &#x3D; &#39;&#39;# 填注册后获得的32位key\n        self.user_id &#x3D; &#39;9527&#39;#随便填\n\n    def get_robot_dialogue(self, msg):\n        api_url &#x3D; &#39;http:&#x2F;&#x2F;openapi.tuling123.com&#x2F;openapi&#x2F;api&#x2F;v2&#39;\n        req &#x3D; &#123;\n            &#39;reqType&#39;: 0,\n            &#39;perception&#39;: &#123;\n                &#39;inputText&#39;: &#123;\n                    &#39;text&#39;: msg\n                &#125;\n            &#125;,\n            &#39;userInfo&#39;: &#123;\n                &#39;apiKey&#39;: self.api_key,\n                &#39;userId&#39;: self.user_id\n            &#125;\n        &#125;\n        req &#x3D; json.dumps(req).encode(&#39;utf8&#39;)\n        response &#x3D; requests.post(api_url, data&#x3D;req, headers&#x3D;&#123;&#39;content-type&#39;: &#39;application&#x2F;json&#39;&#125;)\n        response_dic &#x3D; response.json()\n        intent_code &#x3D; response_dic[&#39;intent&#39;][&#39;code&#39;]\n        results_text &#x3D; response_dic[&#39;results&#39;][0][&#39;values&#39;][&#39;text&#39;]\n        return intent_code, results_text\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    bullet_screen &#x3D; bullet_screen(21912783)\n    code,text &#x3D; bullet_screen.get_robot_dialogue(&#39;主播棒棒哒&#39;)\n    print(code,text)\n</code></pre>\n\n<h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3><p>现在可以根据最新一条弹幕内容，发送自动对话的结果了</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    bullet_screen &#x3D; bullet_screen(21912783)\n    lastMsg &#x3D; bullet_screen.query()\n    code, dialogue &#x3D; bullet_screen.get_robot_dialogue(lastMsg)\n    if code &#x3D;&#x3D; 0:\n        response &#x3D; bullet_screen.send(dialogue)\n    print(lastMsg,dialogue)</code></pre>\n\n<p>效果如下：<br><img src=\"https://img-blog.csdnimg.cn/20200224015047284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NhaTYxMjc4MQ==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>图灵机器人没有验证或者购买的话，只有3次免费试用机会，笑哭</p>\n","text":" 前言媳妇儿玩起了bilibili直播，我就顺便研究下利用python发送弹幕，以表支持～，主要思路通过发送http请求。 发送弹幕1. 查询http请求首先登录b站，进入直播间，打开开发者工具，先在直播间发送一条弹幕。 可以看到请求的url地址，请求方式是post，以及请求的表...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"Python","slug":"Python","count":1,"path":"api/categories/Python.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%91%E9%80%81%E5%BC%B9%E5%B9%95\"><span class=\"toc-text\">发送弹幕</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E6%9F%A5%E8%AF%A2http%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">1. 查询http请求</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E6%9F%A5%E8%AF%A2%E8%87%AA%E5%B7%B1%E8%B4%A6%E5%8F%B7cookie%E5%92%8Cuser-agent%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">2. 查询自己账号cookie和user-agent信息</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">3. 代码</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E8%AF%A2%E5%BC%B9%E5%B9%95\"><span class=\"toc-text\">查询弹幕</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E6%9F%A5%E8%AF%A2http%E8%AF%B7%E6%B1%82-1\"><span class=\"toc-text\">1. 查询http请求</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E6%9F%A5%E8%AF%A2%E8%BF%94%E5%9B%9E%E4%BF%A1%E6%81%AF%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">2. 查询返回信息结构</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E4%BB%A3%E7%A0%81-1\"><span class=\"toc-text\">3. 代码</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%8A%A8%E8%81%8A%E5%A4%A9%E5%BC%B9%E5%B9%95\"><span class=\"toc-text\">自动聊天弹幕</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E6%B3%A8%E5%86%8C\"><span class=\"toc-text\">1. 注册</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%EF%BC%8Chttp%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">2，http请求</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E8%BF%94%E5%9B%9E%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">3. 返回格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">4. 代码</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">效果</span></a></li></ol>","author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Unity动画优化:Optimize Game Objects","uid":"3a0b1b76fc538b21ccd4834c8f7647d5","slug":"Unity动画优化!Optimize Game Objects","date":"2020-03-12T06:43:16.000Z","updated":"2022-07-16T11:30:57.118Z","comments":true,"path":"api/articles/Unity动画优化!Optimize Game Objects.json","keywords":null,"cover":[],"text":" 一、Optimize Game Objects介绍Unity中FBX的导入设置,Inspector中Rig页签下有Optimize Game Objects选项，Unity官方文档的解释是：In the GameObjects hierarchy of a character,...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"Unity Optimize","slug":"Unity-Optimize","count":1,"path":"api/categories/Unity-Optimize.json"}],"tags":[],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"批量删除预制脚本","uid":"cf6a4766c3507937614ad6819b2f17d9","slug":"批量删除预制脚本","date":"2020-01-02T16:54:06.000Z","updated":"2022-07-16T11:30:57.120Z","comments":true,"path":"api/articles/批量删除预制脚本.json","keywords":null,"cover":[],"text":" 环境：Unity 2018.4.12需求：项目中经常需要在Unity Editor模式下批量删除Prefab中的某个脚本，但是直接用&#96;GameObject.DestroyImmediate(obj);&#96;会报错：Destroying assets is not p...","link":"","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[{"name":"Unity","slug":"Unity","count":4,"path":"api/categories/Unity.json"}],"tags":[],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}