{"title":"Unity世界坐标局部坐标转换","uid":"3ec350ecf5fdab2807ec97539f38afce","slug":"Unity世界坐标局部坐标转换","date":"2020-04-01T12:23:08.000Z","updated":"2022-07-16T11:30:57.000Z","comments":true,"path":"api/articles/Unity世界坐标局部坐标转换.json","keywords":null,"cover":null,"content":"<span id=\"more\"></span>\n\n<h2 id=\"world-pos-gt-ui-local-pos\"><a href=\"#world-pos-gt-ui-local-pos\" class=\"headerlink\" title=\"world pos -&gt; ui local pos\"></a>world pos -&gt; ui local pos</h2><p>世界坐标转UI局部坐标比较常用，也比较简单。</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">Vector3 worldPosition &#x3D; _3dTransform.position;\nVector3 screenPosition &#x3D; _3dCamera.WorldToScreenPoint(worldPosition);\n\nVector2 localPostion;\nif (RectTransformUtility.ScreenPointToLocalPointInRectangle((RectTransform)_canvas.transform, screenPosition, _canvas.worldCamera, out localPostion))\n&#123;\n    _2dTransform.localPosition &#x3D; localPostion;\n&#125;</code></pre>\n\n<h2 id=\"ui-local-pos-gt-world-pos\"><a href=\"#ui-local-pos-gt-world-pos\" class=\"headerlink\" title=\"ui local pos -&gt; world pos\"></a>ui local pos -&gt; world pos</h2><ol>\n<li><p>如果知道UI物件，直接通过transform.position获得。</p>\n</li>\n<li><p>如果只知道UI父节点以及一个相对于父节点的局部坐标，可以通过：</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">worldPos &#x3D; parentTransform.TransformPoint(localPos);</code></pre>\n</li>\n<li><p>如果只知道一个UI坐标，需要先转到屏幕坐标系，再转到世界坐标系：</p>\n</li>\n</ol>\n<pre><code>首先主要考虑的是UI适配，通常canvas scale会设置成Scale With Screen Size，Canvas大小就不一定是屏幕分辨率的大小。\n\n假设原本的标准分辨率是720x1280，在ipad的分辨率1536x2048上显示时：\n\n假如是以高度为适配，那么Canvas 实际高度为1280，宽度为1536 / 2048 \\* 1280 = 960，拉伸比例为2048 / 1280 = 1.6;\n\n假如是以宽度为适配，那么Canvas实际宽度为720，高度为2048 / 1536 \\* 720 = 960，拉伸比例为1536 / 720 = 2.13;\n\n那么屏幕坐标 = Canvas下的UI局部坐标 \\* 拉伸比例 + 屏幕宽高 / 2;\n\n因为Canvas UI局部坐标系的原点在中间，而屏幕坐标系的原点在左下角。\n\n接着再通过ScreenToWorldPoint\\(screenPos\\)转为世界坐标。\n\n代码如下：\n</code></pre>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">var standardSize &#x3D; new Vector2(720f, 1280f);\nvar scale &#x3D; canvasScaler.matchWidthOrHeight &#x3D;&#x3D; 0\n    ? Screen.width &#x2F; standardSize.x\n    : Screen.height &#x2F; standardSize.y;\nvar screenPos &#x3D; localPos * scale + 0.5f * new Vector2(Screen.width, Screen.height);\nvar worldPos &#x3D; new Vector3();\n RectTransformUtility.ScreenPointToWorldPointInRectangle((RectTransform) canvas.transform, screenPos, uiCamera, out worldPos);</code></pre>\n\n<ol start=\"4\">\n<li>如果只是为了获得偏移，可以简单地通过比例来获得：<br>worldOffsetY &#x2F; uicamera.orthographicSize * 2 &#x3D; uiOffsetY &#x2F; Screen.height</li>\n</ol>\n","text":" world pos -&gt; ui local pos世界坐标转UI局部坐标比较常用，也比较简单。 Vector3 worldPosition &#x3D; _3dTransform.position; Vector3 screenPosition &#x3D; _3dCam...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Unity","slug":"Unity","count":5,"path":"api/categories/Unity.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#world-pos-gt-ui-local-pos\"><span class=\"toc-text\">world pos -&gt; ui local pos</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ui-local-pos-gt-world-pos\"><span class=\"toc-text\">ui local pos -&gt; world pos</span></a></li></ol>","author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"脚本解析photoshop文本属性","uid":"5992dcd2bf88f595edc9caf556b4762c","slug":"脚本解析photoshop文本属性","date":"2017-09-23T10:35:11.000Z","updated":"2022-07-16T12:23:29.000Z","comments":true,"path":"api/articles/脚本解析photoshop文本属性.json","keywords":null,"cover":[],"text":" 尊重原创，转载请在文首注明出处：http://blog.csdn.net/cai612781/article/details/78072531 在做unity项目中，用到了psd2ngui插件来把psd直接导出成prefab，psd2ngui的原理就是解析psd中图层的命名来生...","link":"","photos":[],"count_time":{"symbolsCount":"7.9k","symbolsTime":"7 mins."},"categories":[{"name":"PhotoShop","slug":"PhotoShop","count":2,"path":"api/categories/PhotoShop.json"}],"tags":[{"name":"photoshop script ps script actionmanager","slug":"photoshop-script-ps-script-actionmanager","count":1,"path":"api/tags/photoshop-script-ps-script-actionmanager.json"}],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Unity动画优化:Optimize Game Objects","uid":"3a0b1b76fc538b21ccd4834c8f7647d5","slug":"Unity动画优化!Optimize Game Objects","date":"2020-03-12T06:43:16.000Z","updated":"2022-07-16T11:30:57.000Z","comments":true,"path":"api/articles/Unity动画优化!Optimize Game Objects.json","keywords":null,"cover":[],"text":" 一、Optimize Game Objects介绍Unity中FBX的导入设置,Inspector中Rig页签下有Optimize Game Objects选项，Unity官方文档的解释是：In the GameObjects hierarchy of a character,...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"Unity Optimize","slug":"Unity-Optimize","count":1,"path":"api/categories/Unity-Optimize.json"}],"tags":[],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}