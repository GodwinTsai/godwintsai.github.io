{"title":"C#调用可执行文件","uid":"352e398b9e08d481e8318632bbc69c42","slug":"CSharp调用可执行文件","date":"2018-01-11T01:50:59.000Z","updated":"2022-07-16T11:30:57.000Z","comments":true,"path":"api/articles/CSharp调用可执行文件.json","keywords":null,"cover":null,"content":"<span id=\"more\"></span>\n\n<p>尊重原创，转载请在文首注明出处：<a href=\"http://blog.csdn.net/cai612781/article/details/79030654\">http://blog.csdn.net/cai612781/article/details/79030654</a></p>\n<p>一，语法</p>\n<p>C#提供Process类来对本地或远程进程进行访问，以及启动或停止本地进程。</p>\n<p>更多语法信息：<a href=\"https://msdn.microsoft.com/zh-cn/library/system.diagnostics.process.aspx\">https://msdn.microsoft.com/zh-cn/library/system.diagnostics.process.aspx</a></p>\n<p>二，代码</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">using System;\nusing System.Collections.Generic;\nusing System.Diagnostics;\nusing System.Linq;\nusing System.Text;\nusing Debug &#x3D; UnityEngine.Debug;\n\nnamespace Assets.Editor\n&#123;\n    public class EditorUtil\n    &#123;\n        public static void ExecuteProcess(string filePath, string command, string workPath &#x3D; &quot;&quot;, int seconds &#x3D; 0)\n        &#123;\n            if (string.IsNullOrEmpty(filePath))\n            &#123;\n                return;\n            &#125;\n            Process process &#x3D; new Process();&#x2F;&#x2F;创建进程对象\n            process.StartInfo.WorkingDirectory &#x3D; workPath;\n            process.StartInfo.FileName &#x3D; filePath;\n            process.StartInfo.Arguments &#x3D; command;\n            process.StartInfo.CreateNoWindow &#x3D; true;\n            process.StartInfo.RedirectStandardOutput &#x3D; false;&#x2F;&#x2F;不重定向输出\n            try\n            &#123;\n                if (process.Start())\n                &#123;\n                    if (seconds &#x3D;&#x3D; 0)\n                    &#123;\n                        process.WaitForExit(); &#x2F;&#x2F;无限等待进程结束\n                    &#125;\n                    else\n                    &#123;\n                        process.WaitForExit(seconds); &#x2F;&#x2F;等待毫秒\n                    &#125;\n                &#125;\n            &#125;\n            catch (Exception e)\n            &#123;\n                Debug.LogError(e.Message);\n            &#125;\n            finally\n            &#123;\n                process.Close();\n            &#125;\n        &#125;\n    &#125;\n&#125;</code></pre>","text":" 尊重原创，转载请在文首注明出处：http://blog.csdn.net/cai612781/article/details/79030654 一，语法 C#提供Process类来对本地或远程进程进行访问，以及启动或停止本地进程。 更多语法信息：https://msdn.mic...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"C#","slug":"C","count":4,"path":"api/categories/C.json"}],"tags":[{"name":"C#启动进程 C#调用可执行文件","slug":"C-启动进程-C-调用可执行文件","count":1,"path":"api/tags/C-启动进程-C-调用可执行文件.json"}],"toc":"","author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"ps脚本解析psd文本字号","uid":"3e1482db617d1778a858877ea039d577","slug":"ps脚本解析psd文本字号","date":"2018-08-25T06:59:52.000Z","updated":"2022-07-16T11:30:57.000Z","comments":true,"path":"api/articles/ps脚本解析psd文本字号.json","keywords":null,"cover":null,"text":" ps脚本解析psd中文本字号最简单的方法，通过DOM获取：var size &#x3D; activeDocument.activeLayer.textItem.size; 但是当该文本被拉伸过后，DOM解析出来的字号就会错误。正确的方式是通过Action Manager来获取...","link":"","photos":[],"count_time":{"symbolsCount":976,"symbolsTime":"1 mins."},"categories":[{"name":"PhotoShop","slug":"PhotoShop","count":2,"path":"api/categories/PhotoShop.json"}],"tags":[],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"C#复制文件","uid":"753f4a58196ae7671f17e65f13baa6b7","slug":"CSharp复制文件","date":"2018-01-09T09:22:12.000Z","updated":"2022-07-16T11:30:57.000Z","comments":true,"path":"api/articles/CSharp复制文件.json","keywords":null,"cover":null,"text":" 尊重原创，转载请在文首注明出处：http://blog.csdn.net/cai612781/article/details/79015286 开发Unity编辑器工具中经常遇到需要把文件复制到工程中，例如数据、图片等。 using System.Collections.Gen...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"C#","slug":"C","count":4,"path":"api/categories/C.json"}],"tags":[{"name":"C#复制文件 删除只读文件异常","slug":"C-复制文件-删除只读文件异常","count":1,"path":"api/tags/C-复制文件-删除只读文件异常.json"}],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}