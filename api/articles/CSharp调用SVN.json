{"title":"C#调用SVN","uid":"46fb15b5cb654d863634ab785c7560a1","slug":"CSharp调用SVN","date":"2018-01-09T09:10:37.000Z","updated":"2022-07-16T14:45:06.000Z","comments":true,"path":"api/articles/CSharp调用SVN.json","keywords":null,"cover":null,"content":"<span id=\"more\"></span>\n\n<p>尊重原创，转载请在文首注明出处：<a href=\"http://blog.csdn.net/cai612781/article/details/79015085\">http://blog.csdn.net/cai612781/article/details/79015085</a></p>\n<p>一，语法</p>\n<p>项目开发中通常都会使用Subversion(SVN)作为版本控制系统，同时会使用SVN的客户端软件TortoiseSVN。</p>\n<p>我们通过TortoiseSVN的TortoiseProc.exe程序添加参数，来实现在C#或bat批处理脚本中调用SVN。<br>举个栗子： TortoiseProc.exe &#x2F;command:update &#x2F;path:xxx &#x2F;closeonend:0</p>\n<p>&#x2F;command表示SVN的操作命令</p>\n<p>&#x2F;path表示操作的路径，可以有多个，用*分隔</p>\n<p>&#x2F;closeonend用于在执行完毕后关闭对话框：</p>\n<p>&#x2F;closeonend:0不自动关闭对话框</p>\n<p>&#x2F;closeonend:1没有错误，则自动关闭对话框</p>\n<p>&#x2F;closeonend:2没有错误、冲突，则自动关闭对话框</p>\n<p>&#x2F;closeonend:3没有错误、冲突、合并，自动关闭对话框</p>\n<p> </p>\n<p>二，代码</p>\n<p> </p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Text;\nusing UnityEditor;\n\nnamespace Assets.Editor.Svn\n&#123;\n    public class SvnUtil : UnityEditor.Editor\n    &#123;\n        private static string _svnPath &#x3D; &quot;&quot;;\n\n        public static void DelAndUpdateSvnFile(string path)\n        &#123;\n            if (File.Exists(path))\n            &#123;\n                File.Delete(path);\n            &#125;\n            ExecuteProcess(GetSvnProcPath(), string.Format(&quot;&#x2F;command:update &#x2F;path:&#123;0&#125; &#x2F;closeonend:2&quot;, path));\n        &#125;\n\n        public static void RevertAndUpdateSvnDirectory(string path)\n        &#123;\n            ExecuteProcess(GetSvnProcPath(), string.Format(&quot;&#x2F;command:revert -r &#x2F;path:&#123;0&#125; &#x2F;closeonend:2&quot;, path));\n            ExecuteProcess(GetSvnProcPath(), string.Format(&quot;&#x2F;command:update &#x2F;path:&#123;0&#125; &#x2F;closeonend:2&quot;, path));\n        &#125;\n\n        public static void UpdateSvnDirectory(string path)\n        &#123;\n            ExecuteProcess(GetSvnProcPath(), string.Format(&quot;&#x2F;command:update &#x2F;path:&#123;0&#125; &#x2F;closeonend:2&quot;, path));\n        &#125;\n\n        public static void CommitSvnDirectory(string path)\n        &#123;\n            ExecuteProcess(GetSvnProcPath(), string.Format(&quot;&#x2F;command:commit &#x2F;path:&#123;0&#125; &#x2F;closeonend:0&quot;, path));\n        &#125;\n\n        public static void ProcessSvnCommand(string command)\n        &#123;\n            ExecuteProcess(GetSvnProcPath(), command);\n        &#125;\n\n        private static List&lt;string&gt; drives &#x3D; new List&lt;string&gt;() &#123; &quot;c:&quot;, &quot;d:&quot;, &quot;e:&quot;, &quot;f:&quot;&#125;;\n\n        private static string svnPath &#x3D; @&quot;\\Program Files\\TortoiseSVN\\bin\\&quot;;\n        private static string svnProc &#x3D; @&quot;TortoiseProc.exe&quot;;\n        private static string svnProcPath &#x3D; &quot;&quot;;\n\n        private static string GetSvnProcPath()\n        &#123;\n            if (_svnPath !&#x3D; string.Empty)\n            &#123;\n                return _svnPath;\n            &#125;\n            foreach (string item in drives)\n            &#123;\n                string path &#x3D; string.Concat(item, svnPath, svnProc);\n                if (File.Exists(path))\n                &#123;\n                    _svnPath &#x3D; path;\n                    break;\n                &#125;\n            &#125;\n            if (_svnPath &#x3D;&#x3D; string.Empty)\n            &#123;\n                _svnPath &#x3D; EditorUtility.OpenFilePanel(&quot;Select TortoiseProc.exe&quot;, &quot;c:\\\\&quot;, &quot;exe&quot;);\n            &#125;\n\t\t\t&#x2F;&#x2F;可将路径存到本地注册表\n            return _svnPath;\n        &#125;\n\n        private static void ExecuteProcess(string filePath, string command, int seconds &#x3D; 0)\n        &#123;\n            EditorUtil.ExecuteProcess(filePath, command, &quot;&quot;, seconds);&#x2F;&#x2F;参见文末另一篇：C#调用可执行文件\n        &#125;\n    &#125;\n&#125;</code></pre>\n\n<p>EditorUtil.ExecuteProcess 参见另一篇：<a href=\"https://blog.csdn.net/cai612781/article/details/79030654\">C#调用可执行文件</a></p>\n","text":" 尊重原创，转载请在文首注明出处：http://blog.csdn.net/cai612781/article/details/79015085 一，语法 项目开发中通常都会使用Subversion(SVN)作为版本控制系统，同时会使用SVN的客户端软件TortoiseSVN。 ...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"C#","slug":"C","count":4,"path":"api/categories/C.json"}],"tags":[{"name":"C#调用SVN","slug":"C-调用SVN","count":1,"path":"api/tags/C-调用SVN.json"}],"toc":"","author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"C#复制文件","uid":"753f4a58196ae7671f17e65f13baa6b7","slug":"CSharp复制文件","date":"2018-01-09T09:22:12.000Z","updated":"2022-07-16T11:30:57.000Z","comments":true,"path":"api/articles/CSharp复制文件.json","keywords":null,"cover":null,"text":" 尊重原创，转载请在文首注明出处：http://blog.csdn.net/cai612781/article/details/79015286 开发Unity编辑器工具中经常遇到需要把文件复制到工程中，例如数据、图片等。 using System.Collections.Gen...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"C#","slug":"C","count":4,"path":"api/categories/C.json"}],"tags":[{"name":"C#复制文件 删除只读文件异常","slug":"C-复制文件-删除只读文件异常","count":1,"path":"api/tags/C-复制文件-删除只读文件异常.json"}],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Unity协程&在编辑器中使用协程","uid":"21ad9801a0836d599aef927bc9336390","slug":"Unity协程&在编辑器中使用协程","date":"2018-01-06T17:42:45.000Z","updated":"2022-07-16T11:30:57.000Z","comments":true,"path":"api/articles/Unity协程&在编辑器中使用协程.json","keywords":null,"cover":null,"text":" 尊重原创，转载请在文首注明出处：http://blog.csdn.net/cai612781/article/details/78992805一，定义Unity协程(Coroutine)，不是卖机票的携程，是一种类似子线程的机制，可以用来实现一些延时处理的需求，c#中通过yie...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"Unity","slug":"Unity","count":5,"path":"api/categories/Unity.json"}],"tags":[{"name":"unity coroutine unity协程 use coroutine in uni 编辑器中使用协程","slug":"unity-coroutine-unity协程-use-coroutine-in-uni-编辑器中使用协程","count":1,"path":"api/tags/unity-coroutine-unity协程-use-coroutine-in-uni-编辑器中使用协程.json"}],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}