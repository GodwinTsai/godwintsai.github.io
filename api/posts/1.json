{"total":16,"pageSize":12,"pageCount":2,"data":[{"title":"Unity Native Share","uid":"53dd06da211ddc36ae4f082ffffced70","slug":"Unity Native Share","date":"2024-08-15T14:22:12.000Z","updated":"2024-08-15T08:19:54.852Z","comments":true,"path":"api/articles/Unity Native Share.json","cover":[],"text":"尊重原创，转载请在文首注明出处：https://github.com/godwintsai 游戏中需要有通过系统app分享图片或者文字或者链接给其它玩家的需求，没有接入第三方插件的情况可以直接编写代码实现。 一、ios分享可以直接通过编写Objective-C++代码实现，在As...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"Unity","slug":"Unity","count":5,"path":"api/categories/Unity.json"}],"tags":[{"name":"Unity Native Share","slug":"Unity-Native-Share","count":1,"path":"api/tags/Unity-Native-Share.json"}],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Skill&Buff Editor","uid":"9445c1590d18cd4588eaa614d62d2feb","slug":"Skill&Buff Editor","date":"2020-04-02T02:57:25.000Z","updated":"2022-07-16T11:30:57.000Z","comments":true,"path":"api/articles/Skill&Buff Editor.json","cover":[],"text":" 之前项目做的一个moba的skill&amp;buff编辑器，采用winform实现，独立于Unity。 主编辑窗口（图中左上角），通过c# Attribute，反射技能逻辑的字段，采用节点和连线编辑，独立于具体的技能逻辑。 节点的属性编辑（图中右上角）通过扩展winform的...","link":"","photos":[],"count_time":{"symbolsCount":304,"symbolsTime":"1 mins."},"categories":[{"name":"C#","slug":"C","count":4,"path":"api/categories/C.json"}],"tags":[{"name":"Unity","slug":"Unity","count":1,"path":"api/tags/Unity.json"}],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"脚本解析photoshop文本属性","uid":"5992dcd2bf88f595edc9caf556b4762c","slug":"脚本解析photoshop文本属性","date":"2017-09-23T10:35:11.000Z","updated":"2022-07-16T12:23:29.000Z","comments":true,"path":"api/articles/脚本解析photoshop文本属性.json","cover":[],"text":" 尊重原创，转载请在文首注明出处：http://blog.csdn.net/cai612781/article/details/78072531 在做unity项目中，用到了psd2ngui插件来把psd直接导出成prefab，psd2ngui的原理就是解析psd中图层的命名来生...","link":"","photos":[],"count_time":{"symbolsCount":"7.9k","symbolsTime":"7 mins."},"categories":[{"name":"PhotoShop","slug":"PhotoShop","count":2,"path":"api/categories/PhotoShop.json"}],"tags":[{"name":"photoshop script ps script actionmanager","slug":"photoshop-script-ps-script-actionmanager","count":1,"path":"api/tags/photoshop-script-ps-script-actionmanager.json"}],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Unity世界坐标局部坐标转换","uid":"3ec350ecf5fdab2807ec97539f38afce","slug":"Unity世界坐标局部坐标转换","date":"2020-04-01T12:23:08.000Z","updated":"2022-07-16T11:30:57.000Z","comments":true,"path":"api/articles/Unity世界坐标局部坐标转换.json","cover":null,"text":" world pos -&gt; ui local pos世界坐标转UI局部坐标比较常用，也比较简单。 Vector3 worldPosition &#x3D; _3dTransform.position; Vector3 screenPosition &#x3D; _3dCam...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Unity","slug":"Unity","count":5,"path":"api/categories/Unity.json"}],"tags":[],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Unity动画优化:Optimize Game Objects","uid":"3a0b1b76fc538b21ccd4834c8f7647d5","slug":"Unity动画优化!Optimize Game Objects","date":"2020-03-12T06:43:16.000Z","updated":"2022-07-16T11:30:57.000Z","comments":true,"path":"api/articles/Unity动画优化!Optimize Game Objects.json","cover":[],"text":" 一、Optimize Game Objects介绍Unity中FBX的导入设置,Inspector中Rig页签下有Optimize Game Objects选项，Unity官方文档的解释是：In the GameObjects hierarchy of a character,...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"Unity Optimize","slug":"Unity-Optimize","count":1,"path":"api/categories/Unity-Optimize.json"}],"tags":[],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"bilibili发送弹幕","uid":"d0e1bfe93c0db1f072a3c290822ee8c7","slug":"bilibili发送弹幕","date":"2020-02-23T17:51:40.000Z","updated":"2022-07-16T11:30:57.000Z","comments":true,"path":"api/articles/bilibili发送弹幕.json","cover":[],"text":" 前言媳妇儿玩起了bilibili直播，我就顺便研究下利用python发送弹幕，以表支持～，主要思路通过发送http请求。 发送弹幕1. 查询http请求首先登录b站，进入直播间，打开开发者工具，先在直播间发送一条弹幕。 可以看到请求的url地址，请求方式是post，以及请求的表...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"Python","slug":"Python","count":1,"path":"api/categories/Python.json"}],"tags":[],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"批量删除预制脚本","uid":"cf6a4766c3507937614ad6819b2f17d9","slug":"批量删除预制脚本","date":"2020-01-02T16:54:06.000Z","updated":"2022-07-16T11:30:57.000Z","comments":true,"path":"api/articles/批量删除预制脚本.json","cover":[],"text":" 环境：Unity 2018.4.12需求：项目中经常需要在Unity Editor模式下批量删除Prefab中的某个脚本，但是直接用&#96;GameObject.DestroyImmediate(obj);&#96;会报错：Destroying assets is not p...","link":"","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[{"name":"Unity","slug":"Unity","count":5,"path":"api/categories/Unity.json"}],"tags":[],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Timeline Note--引用无关资源","uid":"278122282ab7fc90233764072d390801","slug":"Timeline Note--引用无关资源","date":"2019-08-21T04:09:46.000Z","updated":"2022-07-16T11:30:57.000Z","comments":true,"path":"api/articles/Timeline Note--引用无关资源.json","cover":[],"text":" 一，环境：Unity 2018.4.2 二，结构一个Prefab一段Timeline演出，Prefab上会挂PlayableDirector组件，并绑定Timeline Asset。Timeline Asset的编辑内容 三，现象对预制执行Select Dependencies...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"Timeline","slug":"Timeline","count":2,"path":"api/categories/Timeline.json"}],"tags":[{"name":"Timeline 坑 资源引用 资源依赖","slug":"Timeline-坑-资源引用-资源依赖","count":1,"path":"api/tags/Timeline-坑-资源引用-资源依赖.json"}],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Timeline 一，简介","uid":"077ece2c7670b51ed3e04645fca4119e","slug":"Timeline 一，简介","date":"2019-08-12T12:00:51.000Z","updated":"2022-07-16T11:30:57.000Z","comments":true,"path":"api/articles/Timeline 一，简介.json","cover":[],"text":" 尊重原创，转载请在文首注明出处：https://blog.csdn.net/cai612781/article/details/99330696 环境： Unity 2018.4 一，Introduction 1.1,Timeline Timeline是Unity2017新增的...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"Timeline","slug":"Timeline","count":2,"path":"api/categories/Timeline.json"}],"tags":[{"name":"Timeline","slug":"Timeline","count":1,"path":"api/tags/Timeline.json"}],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"ps脚本解析psd文本字号","uid":"3e1482db617d1778a858877ea039d577","slug":"ps脚本解析psd文本字号","date":"2018-08-25T06:59:52.000Z","updated":"2022-07-16T11:30:57.000Z","comments":true,"path":"api/articles/ps脚本解析psd文本字号.json","cover":null,"text":" ps脚本解析psd中文本字号最简单的方法，通过DOM获取：var size &#x3D; activeDocument.activeLayer.textItem.size; 但是当该文本被拉伸过后，DOM解析出来的字号就会错误。正确的方式是通过Action Manager来获取...","link":"","photos":[],"count_time":{"symbolsCount":976,"symbolsTime":"1 mins."},"categories":[{"name":"PhotoShop","slug":"PhotoShop","count":2,"path":"api/categories/PhotoShop.json"}],"tags":[],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"C#调用可执行文件","uid":"352e398b9e08d481e8318632bbc69c42","slug":"CSharp调用可执行文件","date":"2018-01-11T01:50:59.000Z","updated":"2022-07-16T11:30:57.000Z","comments":true,"path":"api/articles/CSharp调用可执行文件.json","cover":null,"text":" 尊重原创，转载请在文首注明出处：http://blog.csdn.net/cai612781/article/details/79030654 一，语法 C#提供Process类来对本地或远程进程进行访问，以及启动或停止本地进程。 更多语法信息：https://msdn.mic...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"C#","slug":"C","count":4,"path":"api/categories/C.json"}],"tags":[{"name":"C#启动进程 C#调用可执行文件","slug":"C-启动进程-C-调用可执行文件","count":1,"path":"api/tags/C-启动进程-C-调用可执行文件.json"}],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"C#复制文件","uid":"753f4a58196ae7671f17e65f13baa6b7","slug":"CSharp复制文件","date":"2018-01-09T09:22:12.000Z","updated":"2022-07-16T11:30:57.000Z","comments":true,"path":"api/articles/CSharp复制文件.json","cover":null,"text":" 尊重原创，转载请在文首注明出处：http://blog.csdn.net/cai612781/article/details/79015286 开发Unity编辑器工具中经常遇到需要把文件复制到工程中，例如数据、图片等。 using System.Collections.Gen...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"C#","slug":"C","count":4,"path":"api/categories/C.json"}],"tags":[{"name":"C#复制文件 删除只读文件异常","slug":"C-复制文件-删除只读文件异常","count":1,"path":"api/tags/C-复制文件-删除只读文件异常.json"}],"author":{"name":"GodwinTsai","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/GodwinTsai","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}